{"version":3,"sources":["types/FilterEnum.ts","components/Todo/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoItem","todo","onChange","currentTodo","id","completed","title","className","classNames","type","onClick","TodoList","todos","chooseTodo","map","TodoFilter","memo","onChangeQuery","onChangeFilter","selectedOption","query","value","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","clearTodo","onReset","useState","currentUser","setCurrenUser","loadUserFromServer","useCallback","idOfUser","a","user","useEffect","href","email","name","App","visibleTodos","setVisibleTodos","setSelectedOption","setCurrentTodo","setQuery","loadTodosFromApi","handleChangeQuery","str","trimStart","filter","filteredTodos","copyTodos","toLowerCase","includes","filterTodosByRequirments","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93f7b825.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoItemProps {\n  todo: Todo;\n  onChange: (todo: Todo) => void;\n  currentTodo: Todo | null;\n}\n\nexport const TodoItem: FC<TodoItemProps> = (\n  { todo, onChange, currentTodo },\n) => {\n  const {\n    id,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    (\n      <tr data-cy=\"todo\" key={id}>\n        <td className=\"is-vcentered\">{id}</td>\n\n        <td className=\"is-vcentered\">\n          {completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n        </td>\n\n        <td className=\"is-vcentered is-expanded\">\n          <p className={classNames({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n          >\n            {title}\n          </p>\n        </td>\n\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => onChange(todo)}\n          >\n            <span className=\"icon\">\n              <i className={classNames('far', {\n                'fa-eye-slash': id === currentTodo?.id,\n                'fa-eye': id !== currentTodo?.id,\n              })}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    )\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../Todo/TodoItem';\n\ninterface TodoListProps {\n  todos: Todo[];\n  chooseTodo: (todo: Todo) => void;\n  currentTodo: Todo | null;\n}\n\nexport const TodoList: FC<TodoListProps> = ({\n  todos,\n  chooseTodo,\n  currentTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          onChange={chooseTodo}\n          currentTodo={currentTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import {\n  ChangeEvent,\n  FC,\n  memo,\n} from 'react';\nimport { Filter } from '../../types/FilterEnum';\n\ninterface TodoFilterProps {\n  onChangeQuery: (query: string) => void;\n  onChangeFilter: (filter: Filter) => void;\n  selectedOption: string,\n  query: string,\n}\n\nexport const TodoFilter: FC<TodoFilterProps> = memo(({\n  onChangeQuery, onChangeFilter, selectedOption, query,\n}) => {\n  const handleChangeSearchInput = (event: ChangeEvent<HTMLInputElement>) => {\n    onChangeQuery(event.target.value);\n  };\n\n  const handleChangeStatus = ((event: ChangeEvent<HTMLSelectElement>) => {\n    onChangeFilter(event.target.value as Filter);\n  });\n\n  const handleChangeClearButton = () => {\n    onChangeQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleChangeStatus}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeSearchInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          { query\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleChangeClearButton}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  todo: Todo;\n  onReset: () => void;\n}\n\nexport const TodoModal: FC<TodoModalProps> = ({ todo, onReset: clearTodo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n  const [currentUser, setCurrenUser] = useState<User | null>(null);\n\n  const loadUserFromServer = useCallback(async (idOfUser) => {\n    const user = await getUser(idOfUser);\n\n    setCurrenUser(user);\n  }, []);\n\n  useEffect(() => {\n    loadUserFromServer(userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => clearTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser?.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/FilterEnum';\n\nexport const App: FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedOption, setSelectedOption] = useState(Filter.ALL);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n\n  const loadTodosFromApi = useCallback(async () => {\n    const todos = await getTodos();\n\n    setVisibleTodos(todos);\n  }, []);\n\n  const handleChangeQuery = useCallback((str: string) => {\n    setQuery(str.trimStart());\n  }, []);\n\n  const onChangeFilter = useCallback((filter: Filter) => {\n    setSelectedOption(filter);\n  }, []);\n\n  const filterTodosByRequirments = useCallback(\n    (str: string, filter: Filter, todos: Todo[]) => {\n      let copyTodos = todos;\n\n      switch (filter) {\n        case Filter.COMPLETED:\n          copyTodos = todos.filter(({ completed }) => completed);\n          break;\n        case Filter.ACTIVE:\n          copyTodos = todos.filter(({ completed }) => !completed);\n          break;\n        default:\n          copyTodos = todos;\n      }\n\n      return copyTodos.filter(({ title }) => (\n        title.toLowerCase().includes(str.toLowerCase())));\n    }, [],\n  );\n\n  const chooseTodo = (todo: Todo) => {\n    setCurrentTodo(todo);\n  };\n\n  const clearTodo = () => {\n    setCurrentTodo(null);\n  };\n\n  const filteredTodos = filterTodosByRequirments(\n    query, selectedOption, visibleTodos,\n  );\n\n  useEffect(() => {\n    loadTodosFromApi();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeQuery={handleChangeQuery}\n                onChangeFilter={onChangeFilter}\n                selectedOption={selectedOption}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(!filteredTodos.length && !query)\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    chooseTodo={chooseTodo}\n                    currentTodo={currentTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        currentTodo && (\n          <TodoModal todo={currentTodo} onReset={clearTodo} />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}